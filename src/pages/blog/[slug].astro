---
import { getPosts, getPrevAndLast } from "~/content/posts";
import type { BlogPost } from "~/content/posts";
import BaseLayout from "~/layouts/BaseLayout.astro";
import DefaultLayout from "~/layouts/DefaultLayout.astro";
import { formatDate } from "~/lib/formatter";

const [prevPost, nextPost] = await getPrevAndLast(Astro.url.pathname);

export async function getStaticPaths() {
  const blogPost = await getPosts();

  return blogPost.map((post) => ({
    params: { slug: post.slug },
    props: { entry: post },
  }));
}

const entry = Astro.props.entry as BlogPost;
const { Content } = await entry.render();
---

<BaseLayout
  title={entry.data.title}
  description={entry.data.description}
  keywords={entry.data.keywords}
>
  <DefaultLayout>
    <h1 class="mx-auto mb-8 max-w-[40rem] text-xl font-bold">
      {entry.data.title}
    </h1>

    <small class="mx-auto max-w-[40rem]">
      {formatDate(entry.data.date)} ãƒ» {entry.data.readingTime} min read
    </small>

    <article class="prose mt-8 dark:prose">
      <Content />
    </article>

    <div class="prose mx-auto mt-6 max-w-[40rem] pt-6 text-center">
      <div class="flex flex-row justify-between">
        {prevPost ? <a href={prevPost.url}>&lt;- Prev post</a> : <span />}

        {nextPost ? <a href={nextPost.url}>Next post -&gt;</a> : <span />}
      </div>
    </div>
  </DefaultLayout>
</BaseLayout>
